# Generated by Django 5.2.5 on 2025-08-23 17:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SecteurActivite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('role', models.CharField(choices=[('agent', 'Agent de Terrain'), ('superviseur', 'Superviseur'), ('validation', 'Agent de Validation'), ('admin', 'Administrateur')], default='agent', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_immatriculation', models.CharField(blank=True, max_length=20, unique=True)),
                ('raison_sociale', models.CharField(max_length=200)),
                ('nif', models.CharField(max_length=50, unique=True)),
                ('rccm', models.CharField(max_length=50, unique=True)),
                ('adresse', models.TextField()),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('contact_nom', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_telephone', models.CharField(max_length=20)),
                ('statut', models.CharField(choices=[('prospecte', 'Prospecté'), ('dossier_soumis', 'Dossier Soumis'), ('en_cours', 'En Cours de Validation'), ('valide', 'Validé'), ('rejete', 'Rejeté')], default='prospecte', max_length=20)),
                ('motif_rejet', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employeurs_crees', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employeurs_valides', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.region')),
                ('secteur_activite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.secteuractivite')),
            ],
        ),
        migrations.CreateModel(
            name='Declaration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periode', models.DateField()),
                ('date_soumission', models.DateTimeField(blank=True, null=True)),
                ('montant_total_cotisations', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('statut', models.CharField(choices=[('brouillon', 'Brouillon'), ('soumis', 'Soumis'), ('valide', 'Validé'), ('rejete', 'Rejeté')], default='brouillon', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('employeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='declarations', to='core.employeur')),
            ],
            options={
                'unique_together': {('employeur', 'periode')},
            },
        ),
        migrations.CreateModel(
            name='Assure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_assure', models.CharField(blank=True, max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=100)),
                ('numero_cni', models.CharField(max_length=50, unique=True)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('type_assure', models.CharField(choices=[('salarie', 'Salarié'), ('independant', 'Indépendant'), ('volontaire', 'Volontaire')], max_length=20)),
                ('date_affiliation', models.DateTimeField(auto_now_add=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('employeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salaries', to='core.employeur')),
            ],
        ),
        migrations.CreateModel(
            name='ActionRecouvrement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_action', models.CharField(choices=[('relance', 'Relance'), ('mise_demeure', 'Mise en Demeure'), ('visite', 'Visite de Contrôle'), ('autre', 'Autre Action')], max_length=20)),
                ('statut', models.CharField(choices=[('planifiee', 'Planifiée'), ('en_cours', 'En Cours'), ('terminee', 'Terminée'), ('annulee', 'Annulée')], default='planifiee', max_length=20)),
                ('date_planification', models.DateTimeField()),
                ('date_execution', models.DateTimeField(blank=True, null=True)),
                ('montant_recouvre', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('observations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='actions_recouvrement', to=settings.AUTH_USER_MODEL)),
                ('employeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions_recouvrement', to='core.employeur')),
            ],
        ),
        migrations.CreateModel(
            name='LigneDeclaration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salaire_declare', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('cotisation_salariale', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('cotisation_patronale', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('assure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.assure')),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='core.declaration')),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('mode_paiement', models.CharField(choices=[('virement', 'Virement Bancaire'), ('cheque', 'Chèque'), ('mobile', 'Paiement Mobile'), ('guichet', 'Guichet')], max_length=20)),
                ('date_paiement', models.DateField()),
                ('date_reception', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('initie', 'Initié'), ('confirme', 'Confirmé'), ('rejete', 'Rejeté')], default='initie', max_length=20)),
                ('preuve_paiement', models.FileField(blank=True, null=True, upload_to='preuves_paiement/%Y/%m/')),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paiements', to='core.declaration')),
                ('enregistre_par', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PieceJustificative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('fichier', models.FileField(upload_to='pieces_justificatives/%Y/%m/')),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('employeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces_justificatives', to='core.employeur')),
            ],
        ),
    ]
